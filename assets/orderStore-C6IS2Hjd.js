import{y as c,z as e}from"./index-oCaEIrCc.js";const u=c("orders",{state:()=>({error:null,data:null}),actions:{async getOrderSummaries(r){const a=await e.get("order/orderSummaries",{params:{productID:r},paramsSerializer:s=>{var o;const t=(o=s.productID)==null?void 0:o.productID;return Array.isArray(t)?t.map(n=>`productID=${n}`).join("&"):""}});return this.data=a.data,a.data},async checkout(r){return await e.post("order/checkout",r)},async confirmOrder(r){return await e.post("order/confirmOrder",r,{headers:{"Content-Type":"multipart/form-data"}})},async getBuyerOrder(){const r=await e.get("order/as-buyer");return this.data=r.data,r.data},async getSellerOrder(){const r=await e.get("order/as-seller");return this.data=r.data,r.data},async requestToCancelOrder(r){return await e.post("order/request_cancelOrderItem",r)},async requestToCancelWholeOrder(r){return await e.post("order/request_cancelOrder",r)},async confirmCancel(r){return await e.post("order/confirm-cancel",r)},async rejectCancel(r){return await e.post("order/reject-cancel",r)},async markComplete(r){return await e.post("order/mark-complete",r)},async markOrderComplete(r){return await e.post("order/mark-order-complete",r)},async rateProduct(r){return await e.post("order/rate-product",r)},async feedback(r){return await e.post("order/feedback",r)}}});export{u};
