import{y as r,z as a}from"./index-CK4tjqnx.js";const o=r("products",{state:()=>({productList:[],error:null,data:null,filters:{search:"",categoryID:null},pagination:{pageNumber:1,pageSize:10,totalRecord:0},cartCount:0}),persist:{pick:["filters","pagination"]},actions:{async getProductList(t={}){typeof t.search<"u"?this.filters.search=t.search:this.filters.search&&(t.search=this.filters.search),typeof t.categoryID<"u"?this.filters.categoryID=t.categoryID:this.filters.categoryID&&(t.categoryID=this.filters.categoryID);const e=await a.post("product/getProductList",t);return this.productList=e.data.data,this.pagination=e.data.pagination,e.data},async getSpecificProductList(){const t=await a.get("product/getFilteredProductList");return this.data=t.data,t.data},async getProductDetail(t){const e=await a.post("product/getProductDetail",t);return this.data=e.data,e.data},async updateProduct(t){return await a.post("product/updateProduct",t,{headers:{"Content-Type":"multipart/form-data"}})},async deleteProduct(t){return await a.post("product/deleteProduct",t)},async addProduct(t){return await a.post("/product/addProduct",t,{headers:{"Content-Type":"multipart/form-data"}})},async shoppingCart(){const t=await a.get("cart/shoppingCart");return this.cartCount=t.data.length,t.data},async addtoCart(t){return await a.post("/cart/addtoCart",t)},async updateCart(t){return await a.post("/cart/updateCart",t)},async getFeedbackList(t){var e=await a.post("order/feedback",t);return e.data}}});export{o as u};
